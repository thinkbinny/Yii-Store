<?php

namespace backend\models;

use Yii;
use yii\helpers\Json;

/**
 * This is the model class for table "yii2_config".
 *
 * @property integer $id
 * @property string $name
 * @property string $info
 * @property integer $groupid
 * @property string $value
 */
class Config extends \common\models\Config
{
    const CACHE_KEY_CONFIG_FIND_MODEL = 'cache_key_config_menu_find_model';
    const DISPLAY = 1;
    const HIDE = 0;
    public static $displays = [
        self::DISPLAY => '显示',
        self::HIDE => '隐藏',
    ];

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['keyid','title'],'required'],
            [['data'],'required'],
            ['status','integer'],
            [['data'], 'string'],
            [['data'], 'safe'],
            [['keyid'], 'string', 'max' => 20],
            [['title'], 'string', 'max' => 100],
            ['keyid', 'unique'],
            ['status','default', 'value' => 1],
            ['data','verifyData']
        ];
    }

    /**
     * @Author 七秒记忆 <274397981@qq.com>
     * @Date 2020/2/5 22:17
     */
    public function verifyData($attribute){

    }

    public function attributeLabels(){
        $attributeLabels = parent::attributeLabels();

        return $attributeLabels;
    }
    /**
     * @return array
     * @Author 七秒记忆 <274397981@qq.com>
     * @Date 2020/2/5 22:17
     */
    public function scenarios()
    {
        $scenarios =  parent::scenarios(); // TODO: Change the autogenerated stub
        $scenarios['create'] = ['keyid','title','status'];
        $scenarios['update'] = ['keyid','title','status'];
        $scenarios['delete'] = ['id'];
        $scenarios['setup']  = ['data'];
        return $scenarios;
    }

    public function afterSave($insert, $changedAttributes)
    {
        if($this->scenario == 'update' || $this->scenario == 'delete'){
            Yii::$app->cache->delete(self::CACHE_KEY_CONFIG_FIND_MODEL);
        }
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    /**
     * 验证之前转换 Json
     * @return bool
     * @Author 七秒记忆 <274397981@qq.com>
     * @Date 2020/2/5 22:15
     */
    public function beforeValidate()
    {
        if($this->scenario == 'setup'){
            $this->data = Json::encode($this->data);
        }
        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }

    /**
     * @return array|mixed|\yii\db\ActiveRecord[]
     * @Author 七秒记忆 <274397981@qq.com>
     * @Date 2020/2/5 22:15
     */
    public function getMenuList(){
        $key    = self::CACHE_KEY_CONFIG_FIND_MODEL;
        $volist = Yii::$app->cache->get($key);
        if($volist === false){
        $volist = $this->find()
            ->where('status=:status')
            ->addParams([':status'=>1])
            ->select('id,keyid,title')
            ->asArray()
            ->all();
         Yii::$app->cache->set($key,$volist);
        }
        return $volist;
    }
    /**
     * @return array
     */
    public function getStatus() {
        return self::$displays;
    }



}
