<?php
namespace backend\models;
use Yii;
use yii\behaviors\TimestampBehavior;
use extensions\weixin\Application;
use common\models\WxMpQrcode as common;




class WxMpQrcode extends common
{
    public function behaviors() {
        return [
            TimestampBehavior::className(),
        ];
    }
    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['valid_days','scene','callback'],'required'],
            [['valid_days','valid_time','scans_count'], 'integer'],
            [['scene'], 'match', 'pattern' => '/^[-_a-zA-Z0-9]+$/'],
            [['title','callback'], 'string', 'max' => 50],
            [['pic_url'], 'string', 'max' => 255],
            ['valid_days', 'getValid_days'],
            ['callback','VerificationCallback']
        ];
    }

    /**
     * @param $attribute
     * @Author 七秒记忆 <274397981@qq.com>
     * @Date 2019/9/7 10:52
     */
    public function getValid_days($attribute){
        if(empty($this->{$attribute})){ //永久的
            $this->{$attribute} = 0;
        }elseif($this->{$attribute}>30) {
            $this->addError($attribute,'有效期最长30天');
        }
    }

    /**
     * @Author 七秒记忆 <274397981@qq.com>
     * @Date 2019/9/7 10:53
     */
    public function VerificationCallback($attribute){
        //验证是否填写微信配置 Yii::$app->params['weixin']
        if(empty(Yii::$app->params['weixin']['mp']['app_id']) || empty(Yii::$app->params['weixin']['mp']['secret'])){
            $this->addError($attribute,'公众号尚未配置');
        }else{
            $this->{$attribute} =  ucfirst($this->{$attribute});
            $classPath =  '\weixin\behavior\scan\\'.$this->{$attribute} ;
            if (!class_exists($classPath)) {
                $this->addError($attribute,'回调方法不存在');
            }
        }
    }

    //保存之前
    public function beforeSave($insert)
    {

        /**
         * 生成二维码
         */
        $this->pic_url  = $this->qrcode();
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    private function qrcode(){
        $app    = new Application();
        $weixin = $app -> driver('mp.qrcode');
        if(!empty($this->valid_days)){
            $valid_time = $this->valid_days * 86400;
            $ticket = $weixin -> temp($this->scene,$valid_time);//临时
            $this->valid_time = time() + $valid_time;
        }else{
            $ticket = $weixin -> forever($this->scene);
            $this->valid_time = 0;
        }
        return $weixin->getQrcodeUrl($ticket);

    }
}
