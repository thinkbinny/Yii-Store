<?php
namespace common\models;

use common\components\Func;
use Yii;

/**
 * Class Member
 * @package common\models
 * 为了保证数据同步。系统开启触发器
 * 更新注册
 */

class Member extends \yii\db\ActiveRecord {
    const USERINFO_KEY_CACHE   = 'user_info_key_cache';

    const STATUS_DELETED = 0;
    const STATUS_ACTIVE  = 10;
    /**
     * @return string
     */
    public static function tableName() {
        return '{{%member}}';
    }

    /**
     * @return array
     */
    public function rules() {
        return [
            [['uid','status'], 'required'],
            [['sex', 'login', 'reg_ip', 'reg_time', 'last_login_ip', 'last_login_time','status'], 'integer'],
            [['nickname'], 'string', 'max' => 20],
            [['headimgurl'], 'string', 'max' => 200],
            [['qq'], 'string', 'max' => 12],
            [['sex','integral'], 'default', 'value' => 0],
            [['login'], 'default', 'value' => 1],
            ['reg_time', 'default', 'value' => time()],
            ['reg_ip', 'default', 'value' => Func::get_client_ip(1)],
        ];
    }

    /**
     * @return array
     */
    public function attributeLabels() {
        return [
            'uid'                   => '用户ID',
            'nickname'              => '用户昵称',
            'sex'                   => '性别',
            'headimgurl'            => '用户头像',
            'grade'                 => '用户等级',
            'integral'              => '可用积分',
            'money'                 => '用户余额',
            'cost_money'            => '消费金额',
            'login'                 => '登陆次数',
            'reg_ip'                => '注册IP',
            'reg_time'              => '注册时间',
            'last_login_ip'         => '最后登陆IP',
            'last_login_time'       => '最后登陆时间',
            'status'                => '状态',
        ];
    }

    public function scenarios()
    {
        $scenarios =  parent::scenarios(); // TODO: Change the autogenerated stub
        $scenarios['integral']  = [ 'integral'];
        $scenarios['money']     = [ 'money'];
        return $scenarios;
    }

    /**
     * @return bool
     */
    public function beforeValidate()
    {
        if(parent::beforeValidate()){
            $this->last_login_time   = time();
            $this->last_login_ip     = Func::get_client_ip(1);
            //if($this->isNewRecord){ }
            return true;
        }else{
            return false;
        }
    }
    /**
     * 用户登陆
     */
    public static function login($data)
    {
        $model = static::findOne(['uid'=>$data->id]);
        if(empty($model)){
            $model = new static;

            if(!empty($data->username))
            {
                $nickname = $data->username;
            }elseif(!empty($data->email))
            {
                $nickname = $data->email;
            }elseif(!empty($data->mobile))
            {
                $nickname = $data->mobile;
            }else{
                $nickname = $data->id;
            }
            $model->uid      = $data->id;
            $model->status   = $data->status;
            $model->nickname = $nickname;
        }else{
            $model->login    = $model->login+1;
        }
        if (!$model->validate()) {
            return null;
        }
        //待优化 写入日记等
        return $model->save();
    }

    /**
     * @param $uid
     * @param $nickname
     * @param string $headimgurl
     * @param int $sex
     * @return bool
     */
    public static function updateMmber($uid,$nickname,$headimgurl='',$sex=0){
        $model = Member::findOne(['uid'=>$uid]);
        $model->nickname    =  $nickname;
        $model->headimgurl  =  $headimgurl;
        $model->sex         =  $sex;
        return $model->save();
    }

    /**
     * @param int $uid
     * @param string $field
     * @return mixed|string
     * @Author 七秒记忆 <274397981@qq.com>
     * @Date DateTime
     */
    public static function getMemberInfo($uid = 0,$field = 'nickname'){
        static $list;
        $k = self::USERINFO_KEY_CACHE;
        /* 获取缓存数据 */
        if(empty($list)){
            $list = Yii::$app->cache->get($k);
        }

        /* 查找用户信息 */
        $key = "u{$uid}";
        if(isset($list[$key])){ //已缓存，直接使用
            $name = $info = $list[$key];
            if($field){
                $name  = $name[$field];
            }
        } else { //调用接口获取用户信息
            $info = Member::find()
                ->where(['uid'=>$uid])
                ->select('nickname,headimgurl')
                ->asArray()
                ->one();
            if($info !== false ){
                $name = $list[$key] = $info;
                if($field){
                    $name  = $name[$field];
                }
                    /* 缓存用户 */
                $count = count($list);
                $max   = 1000;
                while ($count-- > $max) {
                    array_shift($list);
                }
                Yii::$app->cache->set($k,$list,999999);
            } else {
                $name = '';
                if($field){
                    $name  = ['nickname'=>'','headimgurl'=>''];
                }

            }
        }
        return $name;
    }

    /**
     *  1=>'管理员操作',
        2=>'用户充值',
        3=>'用户消费',
        4=>'订单退款',
        5=>'用户提现'
        6=>'提现反驳'
     * @Author 七秒记忆 <274397981@qq.com>
     * @Date 2020/3/4 23:05
     * $type inc,dec
     */
    public static function setProperty($uid,$type,$scene,$money,$remarks='系统操作'){
        //$transaction = Yii::$app->db->beginTransaction();  // 创建事务
        try {
            $model = self::find()
                ->where("uid=:uid")
                ->addParams([':uid'=>$uid])
                ->one();
            $model->scenario = 'money';
            if(empty($model)){
                throw new \Exception('用户不存在');
            }
            if( $type == 'inc' ){ //添加
                $model->money = bcadd($model->money,$money,2);
            }elseif( $type== 'dec' ){ //删除
                $model->money = bcsub($model->money,$money,2);
                if($model->money<0){
                    throw new \Exception('用户金额不足');
                }
            }else{
                throw new \Exception('非法操作');
            }
            if ( ! $model->save() ){
                $error = current( $model->getFirstErrors() );
                throw new \Exception($error);
            }
            $log = new MemberPropertyLog();
            $log -> uid             = $uid;
            $log -> scene           = $scene;
            $log -> type            = $type;
            $log -> money_change    = $money;
            $log -> money           = $model->money;
            $log -> remarks         = $remarks;
            if ( ! $log->save() ){
                $error = current( $log->getFirstErrors() );
                throw new \Exception($error);
            }
            //$transaction->commit();  // 提交
            $data = ['status'=>true,'message'=>'操作成功'];
            return $data;
        }catch(\Exception $exception){
            $message = $exception->getMessage();
            //$transaction->rollBack();  // 回滚
            $data = ['status'=>false,'message'=>$message];
            return $data;
        }

    }
}
