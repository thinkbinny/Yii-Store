<?php
namespace common\models;
use yii\behaviors\TimestampBehavior;
use Yii;



class Printer extends \yii\db\ActiveRecord{
    const CACHE_KEY_LIST          = 'cache_key_printer_list';
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%printer}}';
    }
    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['id','type','amount','sort','status','created_at','updated_at'], 'integer'],
            [['name'], 'string', 'max' => 50],
            [['config'], 'string', 'max' => 250],
            [['sort'], 'default', 'value' =>50],
            [['status'], 'default', 'value' =>1],
        ];
    }


    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id'                => '打印机ID',
            'name'              => '打印机名称',
            'type'              => '打印机类型',
            'amount'            => '打印次数',
            'config'            => '打印机配置',
            'sort'              => '顺序',
            'status'            => '状态',
            'created_at'        => '创建时间',
            'updated_at'        => '更新时间',
        ];
    }

    /**
     * @return array
     * @Author 七秒记忆 <274397981@qq.com>
     * @Date 2020/1/30 14:18
     */
    public function behaviors() {
        return [
            TimestampBehavior::className(),
        ];
    }
    /**
     * 保存之后执行
     * @param bool $insert
     * @param array $changedAttributes
     * @Author 七秒记忆 <274397981@qq.com>
     * @Date 2020/2/4 14:11
     */
    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
        Yii::$app->cache->delete(self::CACHE_KEY_LIST);
    }
    /**
     * @return array|mixed|\yii\db\ActiveRecord[]
     * @Author 七秒记忆 <274397981@qq.com>
     * @Date 2020/2/4 14:11
     */
    public static function getFindDataList(){
        $key  = self::CACHE_KEY_LIST;
        $data = Yii::$app->cache->get($key);
        if($data === false){
            $data = self::find()
                ->where("status=:status")
                ->addParams([':status'=>1])
                ->select("id,name,config")
                ->asArray()
                ->orderBy(['sort'=>SORT_ASC,'updated_at'=>SORT_DESC])
                ->all();

            Yii::$app->cache->set($key,$data);
        }
        if(empty($data)){
            return [];
        }
        return $data;
    }
}
