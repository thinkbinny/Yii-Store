<?php
namespace common\models;

use Yii;
use yii\behaviors\TimestampBehavior;


class Store extends \yii\db\ActiveRecord{
    const CACHE_KEY_FIND_VIEW_MODEL = 'cache_key_store_find_view_model';
    const CACHE_KEY_NAME_LIST = 'cache_key_store_name_list';
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%store}}';
    }
    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['id','parent_uid','uid','logo_image_id','province_id','city_id','district_id','tixian_type','sort','is_check','is_delete','status' ,'created_at','updated_at'], 'integer'],
            [['linkman','phone'], 'string', 'max' => 20],
            ['coordinate', 'string', 'max' => 30],
            [['name','shop_hours','open_account','realname','account'], 'string', 'max' => 50],
            [['detail'], 'string', 'max' => 250],
            [['summary'], 'string', 'max' => 250],
            [['sort'], 'default', 'value' =>50],
            [['is_check','is_delete'], 'default', 'value' =>0],
            [['status'], 'default', 'value' =>1],
        ];
    }
    public function behaviors() {
        return [
            TimestampBehavior::className(),
        ];
    }


    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id'                => '门面ID',
            'parent_uid'        => '上级店长',
            'uid'               => '店长用户',
            'name'              => '门店名称',
            'logo_image_id'     => '门面LOGO',
            'linkman'           => '联系人',
            'phone'             => '联系电话',
            'shop_hours'        => '营业时间',
            'province_id'       => '省份',//如果是空为本地
            'city_id'           => '市区',
            'district_id'       => '县区',
            'detail'            => '详细地址',
            'coordinate'        => '门店坐标',
            'summary'           => '门店简介',
            'tixian_type'       => '提现类型',//(1支付宝,2银卡)
            'open_account'      => '收款名称',
            'realname'          => '收款姓名',
            'account'           => '收款账号',
            'sort'              => '门店排序',
            'is_check'          => '自提核销',
            'status'            => '门店状态',//-1已拒绝，0待审核，1审核通过
            'created_at'        => '创建时间',
            'updated_at'        => '更新时间',
        ];
    }

    /**
     * @var array
     */
    public static $tixian_type = [
        1 => '支付宝',
        2 => '银卡账号',
    ];

    /**
     * @return array
     * @Author 七秒记忆 <274397981@qq.com>
     * @Date 2020/3/8 22:20
     */
    public function getTixianType(){
        return self::$tixian_type;
    }

    /**
     * @return mixed
     * @Author 七秒记忆 <274397981@qq.com>
     * @Date 2020/3/8 22:20
     */
    public function getTixianTypeText(){
        return self::$tixian_type[$this->tixian_type];
    }
    /**
     * @param $id
     * @return mixed|string
     * @Author 七秒记忆 <274397981@qq.com>
     * @Date 2020/3/8 22:18
     */
    public static function getNameText($id){

        if(empty($id)){
            return '';
        }

        static $list;
        /* 获取缓存数据 */
        if(empty($list)){
            $list = Yii::$app->cache->get(self::CACHE_KEY_NAME_LIST);
        }
        $key = "s{$id}";
        if(isset($list[$key])){ //已缓存，直接使用
            $name = $list[$key];
        } else {
            $model = self::find()
                ->where("id=:id")
                ->addParams([':id' => $id])
                ->select('name')
                ->asArray()
                ->one();

            if (!empty($model)) {
                $name = $list[$key] = $model['name'];
                /* 缓存用户 */
                $max   = 10000;
                $count = count($list);
                while ($count-- > $max) {
                    array_shift($list);
                }
                Yii::$app->cache->set(self::CACHE_KEY_NAME_LIST,$list,999999);
            }else{
                $name = '';
            }
        }
        return $name;
    }

    /**
     * @param bool $insert
     * @param array $changedAttributes
     * @Author 七秒记忆 <274397981@qq.com>
     * @Date 2020/2/9 22:33
     */
    public function afterSave($insert, $changedAttributes)
    {
        if(!$this->isNewRecord){
            $cache = self::CACHE_KEY_FIND_VIEW_MODEL.$this->id;
            Yii::$app->cache->delete($cache);
        }
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    /**
     * @param $id
     * @return array|mixed|null|\yii\db\ActiveRecord
     * @Author 七秒记忆 <274397981@qq.com>
     * @Date 2020/2/9 22:32
     */
    public static function findViewModel($id){
        $cache = self::CACHE_KEY_FIND_VIEW_MODEL.$id;
        $data  = Yii::$app->cache->get($cache);
        if($data === false){
            $data = self::find()
                ->where("id=:id")
                ->addParams([':id'=>$id])
                ->select("id,uid,name,logo_image_id,linkman,phone,shop_hours,province_id,city_id,district_id,detail,coordinate,summary")
                ->asArray()
                ->one();
            if(empty($data)){
                return null;
            }
            Yii::$app->cache->set($cache,$data);
        }
        return $data;
    }

}
