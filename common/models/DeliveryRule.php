<?php
namespace common\models;
use yii\behaviors\TimestampBehavior;
use Yii;
use yii\helpers\Json;


class DeliveryRule extends \yii\db\ActiveRecord{
    const CACHE_KEY_FIND_MODEL_ONE = 'cache_key_goods_find_model_one';

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%delivery_rule}}';
    }
    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['delivery_id','created_at','updated_at'], 'integer'],
            ['region', 'safe'],
            [['first','first_fee','additional','additional_fee'], 'double'],
        ];
    }


    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id'                => '模板规则ID',
            'delivery_id'       => '模板ID',
            'region'            => '配送区域',
            'first'             => '首件',
            'first_fee'         => '运费',
            'additional'        => '续件',
            'additional_fee'    => '续费',
            'created_at'        => '创建时间',
            'updated_at'        => '更新时间',
        ];
    }

    /**
     * @return array
     * @Author 七秒记忆 <274397981@qq.com>
     * @Date 2020/1/30 14:18
     */
    public function behaviors() {
        return [
            TimestampBehavior::className(),
        ];
    }
    public function save($runValidation = true, $attributeNames = null)
    {
        if(!$this->isNewRecord){
            $cache = self::CACHE_KEY_FIND_MODEL_ONE . $this->delivery_id;
            Yii::$app->cache->delete($cache);
        }
        return parent::save($runValidation, $attributeNames); // TODO: Change the autogenerated stub
    }

    /**
     * @param $delivery_id
     * @return array|bool|mixed
     * @Author 七秒记忆 <274397981@qq.com>
     * @Date 2020/2/9 14:57
     */
    public static function findModelOne($delivery_id){
        $cache = self::CACHE_KEY_FIND_MODEL_ONE . $delivery_id;
        $data  = Yii::$app->cache->get($cache);
        if($data === false){
            $data   = array();
            $volist = self::find()
                ->where("delivery_id=:delivery_id")
                ->addParams([':delivery_id'=>$delivery_id])
                ->select('id,region,first,first_fee,additional,additional_fee')
                ->asArray()
                ->all();
            foreach ($volist as $vo){
                $vo['region'] = Json::decode($vo['region'],true);
                $data[] = $vo;
            }
            Yii::$app->cache->set($cache,$data);
        }
        return $data;
    }
}
