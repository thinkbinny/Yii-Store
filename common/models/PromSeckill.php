<?php
namespace common\models;
use yii\behaviors\TimestampBehavior;
use Yii;
class PromSeckill extends \yii\db\ActiveRecord{
    public $error;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%prom_seckill}}';
    }
    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['title','description'], 'trim'],
            [['title','goods_id','price','stock','buy_limit','start_time','end_time'], 'required'],
            [['goods_id','sku_id','stock','sales','buy_limit','start_time','end_time','delivery_time','is_delete','status','created_at','updated_at'], 'integer'],
            ['is_delete', 'in', 'range' => [0, 1]],//是否
            ['status', 'in', 'range' => [-1,0,1,2]], ///0未开始、1进行中（即将开始）、2已过期sku_price
            [['title','description'], 'string', 'max' => 200],
            [['sku_price'], 'string', 'max' => 500],
            [['price'], 'double'],
            [['description'], 'default', 'value' => ''],
            [['sku_id','is_delete','status'], 'default', 'value' => 0],
        ];
    }

    /**
     * @inheritdoc
     */

    public function attributeLabels()
    {
        return [
            'id'                => '抢购ID',
            'title'             => '抢购标题',
            'description'       => '抢购介绍',
            'goods_id'          => '抢购商品',
            'sku_id'            => '抢购SKUID',//0 代码不指定
            'price'             => '限时抢购价格',
            'stock'             => '参加抢购库存',
            'sales'             => '抢购销量',
            'buy_limit'         => '限购数量',
            'start_time'        => '开始时间',
            'end_time'          => '结束时间',
            'delivery_time'     => '提货时间',
            'is_delete'         => '是否删除',//(0正常,1已删除)
            'status'            => '抢购状态',//0未开始、1进行中（即将开始）、2已过期
            'created_at'        => '创建时间',
            'updated_at'        => '更新时间',
        ];
    }

    /**
     * @return array
     * @Author 七秒记忆 <274397981@qq.com>
     * @Date 2020/1/30 14:18
     */
    public function behaviors() {
        return [
            TimestampBehavior::className(),
        ];
    }

    public function scenarios()
    {
        $scenarios =  parent::scenarios(); // TODO: Change the autogenerated stub
        return $scenarios;
    }

    /**
     * @var array
     */
    public static $status = [
        -1 => '取消活动',
        0 => '未开始', //即将开始（提前30钟 进入 进行中）
        1 => '进行中',
        2 => '已结束',
    ];

    /**
     * @return array
     * @Author 七秒记忆 <274397981@qq.com>
     * @Date 2020/3/5 13:48
     */
    public function getStatus(){
        return self::$status;
    }

    /**
     * @return mixed
     * @Author 七秒记忆 <274397981@qq.com>
     * @Date 2020/3/5 13:48
     */
    public function getStatusText(){
        return self::$status[$this->status];
    }

}
